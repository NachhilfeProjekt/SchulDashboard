services:
  - name: dashboard-backend
    type: web
    plan: free
    nodeVersion: 18.x
    buildCommand: |
      cd backend
      if [ -f package-lock.json ]; then
        npm ci --production=false
      else
        npm install --production=false
      fi
      npm install --save-dev @types/express @types/cors @types/morgan @types/pg @types/uuid @types/bcryptjs @types/jsonwebtoken @types/winston @types/jest
      mkdir -p src/validation
      echo 'import Joi from "joi"; export const createUserSchema = Joi.object({ email: Joi.string().email().required(), role: Joi.string().valid("developer", "lead", "office", "teacher").required(), locations: Joi.array().items(Joi.string()).min(1).required() }); export const loginSchema = Joi.object({ email: Joi.string().email().required(), password: Joi.string().required() }); export const passwordResetSchema = Joi.object({ token: Joi.string().required(), newPassword: Joi.string().min(8).required() });' > src/validation/user.ts
      npm run clean
      npx tsc --skipLibCheck
    startCommand: |
      cd backend && npm start
    envVars:
      - key: NODE_ENV
        value: production
      - key: NPM_CONFIG_PRODUCTION
        value: false
      - key: DB_HOST
        value: dpg-d0gbpv49c44c73fefpog-a.frankfurt-postgres.render.com
      - key: DB_NAME
        value: dashboard_db_cthh
      - key: DB_USER
        value: dashboard_db_cthh_user
      - key: DB_PASSWORD
        value: hWArsuzVNizlCilLT3sk35bzwqWbtaUT
      - key: DB_PORT
        value: 5432
      - key: DB_SSL
        value: "true"
      - key: JWT_SECRET
        value: ein-sicherer-geheimer-schluessel-dashboard-system
      - key: JWT_EXPIRES_IN
        value: 7d
      - key: FRONTEND_URL
        value: https://dashboard-frontend-p693.onrender.com
